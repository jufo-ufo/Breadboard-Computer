Idee:
[TODO: Zu jedem Punkt/ Veränderung stelle ich mir immer entweder ein Bild, oder hauptsächlich passende einschübe unserer Dokumentationen vor]

- Vor ca. 2 Jahren hatte Alex die Idee, er wolle einen 8-bit Computer bauen, die vor 2 Jahren beim Regionalwettbewerb München-West eingereichte Version einer anderen Gruppe hat dann auch das Interresse von mir (Simon) geweckt.
  Ein paar monate später haben wir uns dann dazu entschieden, tatsächlich einen eigenen 8-bit-Computer zu bauen und haben auch bald angefangen erste Versuche auf dem breadboard zu machen.
  Es gab noch weder eine Möglichkeit diese erste Version automatisch zu betreiben, noch Daten zu schreiben/speichern, oder irgendwie mit der Umgebung zu interagieren,
  nur 3 Register 2 operationen und viele knöpfe zum Bedienen. [Bilder von v1].

- bald war aber klar, dass auch flache Kabel als Verbindung zwischen den Breadboards das Kabelgewirr, das wir bei dem Projekt von vor 2 Jahren gesehen haben
  und nicht auch haben wollten, nicht lösen kann. [Bild mit Kabelgewirr]
- Auf der Suche nach einer Alternative sind wir fast zwangsläufig auf Platinen gekommen, aber weil es ja nicht mehr wirklich selbst gemacht wäre, wenn wir diese professionell Ätzen lassen würden,
  wollten wir versuchen - zumindest einen teil - selbst zu Ätzen.
  Was zu Beginn das projekt vorangetrieben hat, ab diesem Punkt aber natürlich ein Problem dargestellt hat ist das Homeschooling, bei dem wir natürlich nicht Ätzen können.
  bis wir dann so weit waren erste Versuche zu machen war es dann schon Ende 2020. [Bild erste Ätz-versuche]
- Nachdem es auch auf geätzten Platinen noch nicht automatisch ordentlich ist und eine Große Platine für uns nicht machbar gewesen wäre, haben wir uns dann noch ine 3-Dimensionales Design ausgedacht.


- Im nächsten Lockdown hatten wir dann wieder viel Zeit zu planen, und der geplante Computer wurde immer komplexer.
  Aus 8-bit wurden 16-bit Datenlänge, wir wollten ein Memory-Modul haben, immer mehr Operationen bis hin zur Hardware-Multiplikation und komplexere konditionale Jumps.
  Dazu hat sich dann die Idee von einer komplexeren Umsetzung von Interaktion mit dem Computer eingeschlichen:
    universelle Ports zum Anschließen von (modifizierten) Festplatten, Sensoren, einfachen Tastaturen, LCD-Displays und der Vorstellung einer Grafikkarte, die echte Bildschirme betreiben kann.
  [spezifikation v0.1]

  Die vermutlich die größte Änderung war danach, dass wir ein Berechtigungssystem einführen wollten.
  Dafür haben wir dann Flaggen, Interrupts und noch mehr Instruktionen hinzugefügt.
  Um den Computer komplett unabhängig funktionsfähig machen zu können, haben wir uns dann überlegt einen Teil des RAMs durch ROM zu ersetzen, um automatisch Programme von einem externen Speichermedium laden zu können.
  Nachdem uns 2¹⁶= 65536 Speicherzellen (jede einen 16-bit Wert beinhaltend) also 128kiB Daten in Memory bei so vielen Anforderungen dann doch etwas wenig erschienen
  und wir die Idee von mehreren Prozessen, die abwechselnd ausgeführt werden, verlockend war haben wir uns dann entschieden durch eine neue Instruktion, mit der wir Teile des Arbeitsspeichers auswechseln können (Banking),
  beides zu ermöglichen. [Link zu Dokumentation v0.2]

- Im Schuljahr 2021-2022 haben wir dann wieder weitere Tests zum Ätzen - dieses mahl sowohl erfolgreicher, als auch besser Dokumentiert, um die optimalen Belichtungs- und Ätzzeiten zu finden.

- Gleichzeitig haben wir auch angefangen unsere erste vollständige Version der Spezifikation zu schreiben (jetzt auch mit dem eindeutigen Ziel es bei Jugend Forscht anzumelden, die vorherigen Versionen waren auf Englisch, weil wir es uns beim Programmieren der Einheitlichkeit halber angewöhnt haben alles in Englisch zu schreiben).